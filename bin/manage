#!/usr/bin/env bash

exec 2>&1
set -e

_client () {
  mcrcon -H 127.0.0.1 -p ${RCON_PASSWORD} "$@"
}

_prepare () {
  for TEMPLATE in $(find ${MINECRAFT_DIR}/template -maxdepth 1 -type f)
  do
    BASENAME=$(basename ${TEMPLATE})

    if [ ! -f ${MINECRAFT_DIR}/config/${BASENAME} ]
    then
      cp ${TEMPLATE} ${MINECRAFT_DIR}/config/${BASENAME}
    fi

    ln -sf ${MINECRAFT_DIR}/config/${BASENAME} ${MINECRAFT_DIR}/${BASENAME}
  done
}

case "$1" in
  start)
    _prepare

    if pgrep -f minecraft_server.jar
    then
      _client "reload"
    else
      java -jar ${MINECRAFT_DIR}/minecraft_server.jar nogui
    fi
    ;;

  stop)
    if pgrep -f minecraft_server.jar
    then
      _client "stop"
    else
      echo "Server is not running"
      exit 1
    fi
    ;;

  reload)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "reload"
    ;;

  console)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client -t
    ;;

  say)
    VALUE=$2

    if [ $VALUE == "" ]
    then
      echo "Provide a message"
      exit 1
    fi

    [[ $(pgrep -f minecraft_server.jar) ]] && _client "say ${VALUE}"
    ;;

  deop)
    VALUE=$2

    if [ $VALUE == "" ]
    then
      echo "Provide a name"
      exit 1
    fi

    [[ $(pgrep -f minecraft_server.jar) ]] && _client "deop ${VALUE}"
    ;;

  op)
    VALUE=$2

    if [ $VALUE == "" ]
    then
      echo "Provide a name"
      exit 1
    fi

    [[ $(pgrep -f minecraft_server.jar) ]] && _client "op ${VALUE}"
    ;;

  ban-ip)
    VALUE=$2
    REASON=$3

    if [ $VALUE == "" ]
    then
      echo "Provide an ip"
      exit 1
    fi

    [[ $(pgrep -f minecraft_server.jar) ]] && _client "ban-ip ${VALUE} ${REASON}"
    ;;

  ban-ip-list)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "banlist ips"
    ;;

  ban)
    VALUE=$2
    REASON=$3

    if [ $VALUE == "" ]
    then
      echo "Provide a name"
      exit 1
    fi

    [[ $(pgrep -f minecraft_server.jar) ]] && _client "ban ${VALUE} ${REASON}"
    ;;

  ban-list)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "banlist players"
    ;;

  save-all)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "save-all"
    ;;

  save-off)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "save-off"
    ;;

  save-on)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "save-on"
    ;;

  whitelist)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "whitelist list"
    ;;

  whitelist-off)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "whitelist off"
    ;;

  whitelist-on)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "whitelist on"
    ;;

  whitelist-reload)
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "whitelist reload"
    ;;

  whitelist-add)
    VALUE=$2

    if [ $VALUE == "" ]
    then
      echo "Provide a name"
      exit 1
    fi

    [[ $(pgrep -f minecraft_server.jar) ]] && _client "whitelist add ${VALUE}"
    ;;

  whitelist-remove)
    VALUE=$2

    if [ $VALUE == "" ]
    then
      echo "Provide a name"
      exit 1
    fi

    [[ $(pgrep -f minecraft_server.jar) ]] && _client "whitelist remove ${VALUE}"
    ;;

  weather-clear)
    if [ -n $2 ]
    then
      DURATION=$2
    else
      DURATION=300
    fi
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "weather clear ${DURATION}"
    ;;

  weather-rain)
    if [ -n $2 ]
    then
      DURATION=$2
    else
      DURATION=300
    fi
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "weather rain ${DURATION}"
    ;;

  weather-thunder)
    if [ -n $2 ]
    then
      DURATION=$2
    else
      DURATION=300
    fi
    [[ $(pgrep -f minecraft_server.jar) ]] && _client "weather thunder ${DURATION}"
    ;;

  bash)
    bash
    ;;

  help)
    echo "Available sub commands:"
    echo ""
    echo "start                         Start the server on container"
    echo "stop                          Stop the server on container"
    echo "reload                        Reload the server on container"
    echo "bash                          Start a shell on container"
    echo "console                       Start interactive console"
    echo "say <message>                 Say something on the server"
    echo "deop <user>                   Deop a specific player"
    echo "op <user>                     Op a specific player"
    echo "ban-ip <value>                Ban an ip from server"
    echo "ban-ip-list                   List currently banned ips"
    echo "ban <value> [reason]          Ban a player from server"
    echo "ban-list                      List currently banned players"
    echo "save-all                      Save current state of server"
    echo "save-off                      Disable save for the server"
    echo "save-on                       Enable save for the server"
    echo "whitelist                     List users on whitelist"
    echo "whitelist-off                 Disable whitelist for server"
    echo "whitelist-on                  Enable whitelist for server"
    echo "whitelist-reload              Reload the whitelist"
    echo "whitelist-add <user>          Add user to whitelist"
    echo "whitelist-remove <user>       Remove user from whitelist"
    echo "weather-clear [duration]      Set weather to clear"
    echo "weather-rain [duration]       Set weather to rain"
    echo "weather-thunder [duration]    Set weather to thunder"
    ;;

  *)
    exit 1
    ;;

esac
